---
# name of the play
# check accessible instance
- name: Wait for ssh connection
  hosts: lb1
  gather_facts: False
  tasks:
    - name: ensure ssh port open
      # let's tell ansible to wait 10 seconds to be true to do tasks.
      wait_for:
        port: 22
        delay: 10
        timeout: 100
        # continue open ssh
        search_regex: OpenSSH
        # if you don't know the IP address before because it is dynamic.
        host: '{{ (ansible_ssh_host|default(ansible_host))|default(ansible_host)|default(inventory_hostname) }}'
      # you want to execute this task locally
      delegate_to: lb1
      vars:
        ansible_connection: local
        ansible_python_interpreter: /usr/bin/python

- name: Install python3
  hosts: lb1
  become: yes
  tasks:
    - name: Install python3
      apt:
        name: python3
        update_cache: yes
        state: present


- name: Show IP addresses of the target machine
  hosts: lb1  # Replace with your target group or host
  tasks:
    - name: Run 'ip addr' command
      command: ip addr
      register: ip_output

    - name: Display IP addresses
      debug:
        var: ip_output.stdout_lines

- name: Configure Keepalived
  hosts: lb1
  become: yes
  vars:
    virtual_ip: "192.168.1.19"  # Replace with your desired virtual IP address

  tasks:
    - name: Create /etc/keepalived/keepalived.conf file
      blockinfile:
        path: /etc/keepalived/keepalived.conf
        block: |
          vrrp_script chk_haproxy {
              script "killall -0 haproxy"
              interval 2
              weight 2
          }

          vrrp_instance VI_1 {
              interface ens33
              state BACKUP
              priority 100
              virtual_router_id 51

              virtual_ipaddress {
                  {{ virtual_ip }}
              }

              track_script {
                  chk_haproxy
              }
          }


- name: Install Docker
  hosts: lb1
  become: yes
  become_user: root
  tasks:
    - name: Install Docker
      apt:
        name: docker
        update_cache: yes
        # if want to install package
        state: present
        # if want to uninstall package
        # state: absent

- name: Create users
  hosts: lb1
  become: yes  # Run tasks with root/sudo privileges
  tasks:
    - name: Create user
      user:
        name: amine  # Username
        state: present  # Ensure the user is present
        createhome: yes  # Create the user's home directory
    - debug:
        msg: "{{ shell_result.stdout_lines }}"
